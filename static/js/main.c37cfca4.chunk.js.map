{"version":3,"sources":["components/Navbar.tsx","store/models/actions.ts","3d_Objects/HomeCar.tsx","redo.svg","components/Articles.tsx","App.tsx","store/theme/ThemeActions.ts","store/theme/ThemeReducer.ts","store/rootStore.ts","index.tsx"],"names":["ToysNavbar","Navbar","collapseOnSelect","expand","Brand","href","Nav","className","type","placeholder","TOGGLE_THEME","HomeCar","Car","ref","useRef","gltf","useLoader","GLTFLoader","useFrame","reference","current","rotation","x","y","object","scene","position","Scene","castShadow","intensity","fallback","style","display","width","height","margin","bottom","shadowMap","camera","near","far","Articles","src","arrow","Products","React","lazy","connect","state","theme","themeReducer","dispatch","toggle","props","Card","Footer","initialState","rootReducer","combineReducers","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"kOAgBeA,EAbc,WAC3B,OACE,eAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,QAAQ,EAAjC,UACE,cAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,QAAnB,4BACA,eAACC,EAAA,EAAD,CAAKC,UAAU,eAAf,UACE,uBAAOC,KAAK,OAAMC,YAAY,aAC1B,uBAAOD,KAAK,WAAUC,YAAY,aAClC,wBAAQD,KAAK,SAAb,0B,QCVCE,EAAe,e,gCCmDbC,EA3CE,WAEf,SAASC,IACP,IAAMC,EAAMC,mBACNC,EAAOC,YAAUC,IAAY,eAMnC,OALAC,aAAS,WACP,IAAMC,EAAiBN,EAAIO,QAC3BD,EAAUE,SAASC,GAAK,EACxBH,EAAUE,SAASE,GAAK,OAEnB,2BAAWV,IAAKA,EAAKW,OAAQT,EAAKU,MAAOC,SAAU,CAAC,EAAG,EAAG,MAGnE,SAASC,IACP,OACE,qCACE,iCACA,2BAAWC,YAAY,EAAOC,UAAW,GAAIH,SAAU,CAAC,GAAI,GAAI,MAChE,cAAC,WAAD,CAAUI,SAAU,KAApB,SACE,cAAClB,EAAD,SAMR,OACE,gCACE,qBAAKL,UAAU,cAAf,SAA6B,kIAC7B,cAAC,IAAD,CACAwB,MAAO,CAACC,QAAS,QAASC,MAAO,QAASC,OAAQ,QAASC,OAAQ,OAAQT,SAAU,WAAYU,OAAQ,SACvGC,WAAW,EACXC,OAAQ,CACNZ,SAAU,CAAC,EAAG,EAAG,IACjBa,KAAM,EACNC,IAAK,IANT,SASE,cAACb,EAAD,UC7CO,MAA0B,iCCY1Bc,EATE,WACb,OACI,sBAAKlC,UAAU,kBAAf,UACI,6CACA,qBAAKA,UAAU,QAAQmC,IAAKC,QCGlCC,EAAWC,IAAMC,MAAK,kBAAM,gCA6BlC,IAQeC,eARS,SAACC,GAAD,MAAsB,CAC5CC,MAAOD,EAAME,aAAaD,UAGD,SAACE,GAAD,MAAmC,CAC5DC,OAAQ,kBAAMD,EC1CkB,CAC9B3C,KAAME,QD4CKqC,EA/Bf,SAAaM,GACX,OACE,qCACE,sBAAK9C,UAAU,QAAf,UACJ,qBAAKA,UAAU,qBACb,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,wBAEf,cAAC,EAAD,IACA,qBAAKA,UAAU,UAAUmC,IAAI,iFAC7B,cAAC,EAAD,IACA,cAAC,EAAD,IACA,qBAAKnC,UAAU,YAAYmC,IAAI,4EAC/B,cAAC,WAAD,CAAUZ,SAAU,KAApB,SACA,cAACc,EAAD,MAEA,cAACU,EAAA,EAAKC,OAAN,CAAahD,UAAU,SAAvB,sC,QE7BEiD,EAAsB,CACxBP,MAAO,SCFEQ,EAAcC,YAAgB,CAACR,aDKQ,WAAmC,IAAlCF,EAAiC,uDAAzBQ,EAAcG,EAAW,uCAClF,OAAOA,EAAOnD,MACV,KAAKE,EACD,MAAmB,UAAhBsC,EAAMC,MACE,CACHA,MAAO,QAGJ,CACHA,MAAO,SAGnB,QACI,OAAOD,MCfNY,EAAQC,YAAYJ,G,MCAjCK,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.c37cfca4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\nconst ToysNavbar: React.FC = () => {\r\n  return (\r\n    <Navbar collapseOnSelect expand={false} >\r\n      <Navbar.Brand href=\"#home\">3D Toy Gallery</Navbar.Brand>\r\n      <Nav className=\"navbar-login\">\r\n        <input type=\"text\"placeholder=\"UserName\"/>\r\n            <input type=\"password\"placeholder=\"Password\"/>\r\n            <button type=\"submit\">Login</button>\r\n        </Nav>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default ToysNavbar;\r\n","export const TOGGLE_THEME = 'TOGGLE_THEME';\r\n\r\ninterface ToggleTheme {\r\n    type: typeof TOGGLE_THEME\r\n};\r\n\r\nexport default ToggleTheme;","import React, { useRef, Suspense } from \"react\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport {\r\n  Canvas,\r\n  useFrame,\r\n  useLoader,\r\n} from \"react-three-fiber\";\r\n\r\nconst HomeCar =  () => {\r\n\r\n  function Car() {\r\n    const ref = useRef();\r\n    const gltf = useLoader(GLTFLoader, \"/scene.gltf\");\r\n    useFrame(() => {\r\n      const reference: any = ref.current;\r\n      reference.rotation.x += 0;\r\n      reference.rotation.y += 0.05;\r\n    });\r\n    return <primitive ref={ref} object={gltf.scene} position={[0, 2, 10]} />;\r\n  }\r\n\r\n  function Scene() {\r\n    return (\r\n      <>\r\n        <ambientLight />\r\n        <spotLight castShadow={true}  intensity={.5} position={[10, 20, 20]} />\r\n        <Suspense fallback={null}>\r\n          <Car />\r\n        </Suspense>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"text-bubble\"><div>Whooooaaa! I'm getting dizzy here! Take a look around while I figure out this steering wheel.</div></div>\r\n      <Canvas\r\n      style={{display: \"block\", width: \"300px\", height: \"800px\", margin: \"auto\", position: \"relative\", bottom: \"16rem\"}}\r\n        shadowMap={true}\r\n        camera={{\r\n          position: [0, 5, 16],\r\n          near: 5,\r\n          far: 15,\r\n        }}\r\n      >\r\n        <Scene />\r\n      </Canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeCar;\r\n","export default __webpack_public_path__ + \"static/media/redo.39159fd8.svg\";","import React from 'react';\r\nimport arrow from '../redo.svg';\r\n\r\nconst Articles = () => {\r\n    return (\r\n        <div className=\"arrow-container\">\r\n            <h3>Scroll Down</h3>\r\n            <img className=\"arrow\" src={arrow}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Articles;\r\n","import React, {Suspense} from 'react';\nimport ToyNavbar from './components/Navbar';\nimport {connect} from 'react-redux';\nimport {Dispatch} from 'redux';\nimport {AppState} from './store/rootStore';\nimport {toggleTheme} from './store/theme/ThemeActions';\nimport { Card } from \"react-bootstrap\";\nimport './App.css';\nimport HomeCar from './3d_Objects/HomeCar';\nimport Articles from './components/Articles';\nconst Products = React.lazy(() => import('./components/Products'));\n\ninterface AppProps {\n  toggle: () => void;\n}\n\nfunction App(props: any) {\n  return (\n    <>\n      <div className=\"trail\">\n  <div className=\"pointer pointer1\"></div>\n    <div className=\"pointer pointer2\"></div>\n    <div className=\"pointer pointer3\"></div>\n    <div className=\"pointer pointer4\"></div>\n    <div className=\"pointer pointer5\"></div>\n    </div>\n    <ToyNavbar/>\n    <img className=\"img-bee\" src=\"https://i.pinimg.com/originals/3c/58/66/3c5866f78f57a15041acf1a31f59fe73.png\"/>\n    <HomeCar/>\n    <Articles/>\n    <img className=\"img-shelf\" src=\"https://i.pinimg.com/736x/65/f3/13/65f31391a2924aa6a13aba030c3e84d1.jpg\"/>\n    <Suspense fallback={null}>\n    <Products/>\n    </Suspense>\n    <Card.Footer className=\"footer\">Created By Kevin T</Card.Footer>\n    </>\n  )\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  theme: state.themeReducer.theme\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): AppProps => ({\n  toggle: () => dispatch(toggleTheme())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n","import { TOGGLE_THEME } from \"../models/actions\"\r\n\r\nexport const toggleTheme = () => ({\r\n    type: TOGGLE_THEME\r\n})","import {TOGGLE_THEME} from '../models/actions';\r\n\r\nimport {Theme} from '../models/theme';\r\nimport {Action, Reducer} from 'redux';\r\n\r\nconst initialState: Theme = {\r\n    theme: 'light'\r\n};\r\n\r\nexport const themeReducer: Reducer<Theme, Action> = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case TOGGLE_THEME:\r\n            if(state.theme === \"light\") {\r\n                return {\r\n                    theme: \"dark\"\r\n                }\r\n            } else {\r\n                return {\r\n                    theme: \"light\"\r\n                }\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers} from 'redux';\r\nimport {themeReducer} from './theme/ThemeReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({themeReducer})\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport const store = createStore(rootReducer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {store} from './store/rootStore';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}